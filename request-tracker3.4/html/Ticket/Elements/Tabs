%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2005 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<& /Elements/Callback, Ticket => $Ticket, actions=> $actions, tabs => $tabs, %ARGS &>
<& /Elements/Tabs, 
    tabs => $tabs, 
    actions => $actions, 
    current_tab => $current_tab, 
    current_toptab => $current_toptab,
    Title => $Title &> 
<%INIT>

my $tabs = {};
my $current_toptab = "Search/Build.html",
my $searchtabs = {};
my $actions;

if ( $Ticket) {
	
my $id   = $Ticket->id();

if ( defined $session{'tickets'} ) {

        # we have to update session data if we get new ItemMap
        my $updatesession = 1 unless($session{'tickets'}->{'item_map'});

        my $item_map = $session{'tickets'}->ItemMap;

        if ($updatesession) {
                $session{'i'}++;
		$session{'tickets'}->PrepForSerialization();
        }

        # Don't display prev links if we're on the first ticket
        if ($item_map->{$Ticket->Id}->{prev}) {
                $searchtabs->{'_a'} = {
                            class => "nav",
                            path => "Ticket/Display.html?id=" . $item_map->{first},
                            title => '<< ' . loc('First') };
                $searchtabs->{"_b"} = { class => "nav",
                            path => "Ticket/Display.html?id=" . $item_map->{$Ticket->Id}->{prev},
                                  title => '< ' . loc('Prev') };
       } 


        # Don't display next links if we're on the last ticket
        if ($item_map->{$Ticket->Id}->{next}) {
            $searchtabs->{'d'} = { class => "nav",
                            path => "Ticket/Display.html?id=" . $item_map->{$Ticket->Id}->{next},
                             title => loc('Next') . ' >' };
            $searchtabs->{'e'} = {
                           class => "nav",
                           path => "Ticket/Display.html?id=" . $item_map->{last},
                           title => loc('Last') . ' >>' };
        }
}



$tabs->{"this"} = { class => "currentnav",
                    path  => "Ticket/Display.html?id=" . $Ticket->id,
                    title => "#" . $id,
                    current_subtab => $current_subtab };

my $ticket_page_tabs = {
    _A => { title => loc('Display'),
            path  => "Ticket/Display.html?id=" . $id, },

    _Ab => { title => loc('History'),
             path  => "Ticket/History.html?id=" . $id, },
    _B => { title => loc('Basics'),
            path  => "Ticket/Modify.html?id=" . $id, },

    _C => { title => loc('Dates'),
            path  => "Ticket/ModifyDates.html?id=" . $id, },
    _D =>
      { title => loc('People'), path => "Ticket/ModifyPeople.html?id=" . $id, },
    _E => { title => loc('Links'),
            path  => "Ticket/ModifyLinks.html?id=" . $id, },
    _F => { title => loc('Jumbo'),
            path  => "Ticket/ModifyAll.html?id=" . $id,
            separator => 1
 },

};

foreach my $tab ( sort keys %{$ticket_page_tabs} ) {
    if ( $ticket_page_tabs->{$tab}->{'path'} eq $current_tab ) {
        $ticket_page_tabs->{$tab}->{"subtabs"}        = $subtabs;
        $tabs->{'this'}->{"current_subtab"}        = 
        $ticket_page_tabs->{$tab}->{"path"};
    }
}
$tabs->{'this'}->{"subtabs"} = $ticket_page_tabs;
$current_tab = "Ticket/Display.html?id=" . $id;


# Hidden 2006-03-31 - Matthew
# if (    $Ticket->CurrentUserHasRight('ModifyTicket')
#      or $Ticket->CurrentUserHasRight('ReplyToTicket') ) {
#     $actions->{'A'} = { title => loc('Reply'),
#                         path  => "Ticket/Update.html?Action=Respond&id=" . $id,
#     };
# }

if ( $Ticket->CurrentUserHasRight('ModifyTicket') ) {
    if ( $Ticket->Status ne 'resolved' ) {
        $actions->{'B'} = {

            path => "Ticket/Update.html?Action=Comment&DefaultStatus=resolved&id=" . $id,
            title => loc('Resolve with comment') };
        $actions->{'BB'} = {

            path => "Ticket/Display.html?MoveOn=1&Status=resolved&id=" . $id,
            title => loc('Resolve') };
    }
    if ( $Ticket->Status ne 'open' ) {
        $actions->{'C'} = { path => "Ticket/Display.html?Status=open&id=" . $id,
                            title => loc('Open it') };
    }
    if ( $Ticket->Status ne 'deleted' ) {
        $actions->{'CC'} = { path => "Ticket/Display.html?MoveOn=1&Action=Delete&id=" . $id,
                             title => loc('Delete') };
    }
}

if ( $Ticket->CurrentUserHasRight('OwnTicket') ) {
    if ( $Ticket->OwnerObj->id == $RT::Nobody->id ) {
        $actions->{'D'} = { path => "Ticket/Display.html?Action=Take&id=" . $id,
                            title => loc('Take') };
    }
    elsif ( $Ticket->OwnerObj->id != $session{CurrentUser}->id ) {
        $actions->{'E'} = {path => "Ticket/Display.html?Action=Steal&id=" . $id,
                           title => loc('Steal') };
    }
}

if (    $Ticket->CurrentUserHasRight('ModifyTicket')
     or $Ticket->CurrentUserHasRight('CommentOnTicket') ) {
    $actions->{'F'} = { title => loc('Comment'),
                        path  => "Ticket/Update.html?Action=Comment&id=" . $id,
    };
}


# Added by Matthew, 2006-02-13, can't be bothered to use a "callback"
if ($Ticket->CurrentUserHasRight('ModifyTicket')) {
    $actions->{'Praise'} = { title => 'Praise!', path => 'Ticket/Display.html?MoveOn=1&Status=resolved&Queue=3&id=' . $id };
}

}

my $args = "?" . $m->comp(
    '/Elements/QueryString',
    Query   => $ARGS{'Query'}   || $session{'CurrentSearchHash'}->{'Query'},
    Format  => $ARGS{'Format'}  || $session{'CurrentSearchHash'}->{'Format'},
    OrderBy => $ARGS{'OrderBy'} || $session{'CurrentSearchHash'}->{'OrderBy'},
    Order   => $ARGS{'Order'}   || $session{'CurrentSearchHash'}->{'Order'},
    Rows    => $ARGS{'Rows'},
  ) if ($ARGS{'Query'} or $session{'CurrentSearchHash'}->{'Query'});
$args ||= '';

$tabs->{"f"} = { path      => "Search/Build.html?NewQuery=1",
                 title     => loc('New Query')};
$tabs->{"g"} = { path      => "Search/Build.html$args",
                 title     => loc('Query Builder')};
$tabs->{"h"} = { path      => "Search/Edit.html$args",
                 title     => loc('Advanced'),
                 separator => 1 };
if (defined $session{'tickets'} and $session{'tickets'}->Count) {
  $tabs->{"i"} = { path      => "Search/Results.html$args",
                   title     => loc('Show Results'),
                   separator => 1,
                   subtabs   => $searchtabs };
  if ($current_tab =~  "Search/Results.html") {
    $current_tab = "Search/Results.html$args";
  }
}

</%INIT>

  
<%ARGS>
$Ticket => undef
$subtabs => undef
$current_tab => ''
$current_subtab => ''
$Title => undef
</%ARGS>
